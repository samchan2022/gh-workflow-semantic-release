name: Node.js CI

on:
  push:
    branches:
      - main
      - dev
      - stg

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22.8.0"

      - name: Get package name and version
        id: get_pkg_info
        run: |
          echo "#----------------------------------------------"
          echo "pwd: $(pwd)"
          ls -lah
          echo "#----------------------------------------------"
          echo "version: $(jq -r .version package.json)"
          echo "PACKAGE_NAME=$(jq -r .name package.json)" >> $GITHUB_ENV
          echo "PACKAGE_VERSION=$(jq -r .version package.json)" >> $GITHUB_ENV

      - name: Determine target branch and create temporary branch
        id: determine_branch
        run: |
          # Extract the target branch name from GITHUB_REF
          TARGET_BRANCH=${GITHUB_REF#refs/heads/}
          # Create a temporary branch name with the current datetime
          DATETIME=$(date +'%Y%m%d%H%M%S')
          TEMP_BRANCH="release-${TARGET_BRANCH}-${DATETIME}"
          echo "Target branch: $TARGET_BRANCH"
          echo "Temporary branch: $TEMP_BRANCH"
          echo "TARGET_BRANCH=$TARGET_BRANCH" >> $GITHUB_ENV
          echo "TEMP_BRANCH=$TEMP_BRANCH" >> $GITHUB_ENV

      - name: Install dependencies
        run: npm ci

      - name: Run Semantic Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npx semantic-release

      - name: Commit changes to a temporary branch
        id: commit_changes
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          # Create and checkout the temporary branch
          git checkout -b ${{ env.TEMP_BRANCH }}
          # Stage and commit changes
          git add .
          git commit -m "chore(release): ${PACKAGE_VERSION} [skip ci]\n\nGenerated by Semantic Release"
          # Push the temporary branch to the remote
          git push origin HEAD:${{ env.TEMP_BRANCH }}

      - name: Create Pull Request
        id: create_pr
        uses: peter-evans/create-pull-request@v4
        with:
          title: "Release ${{ steps.get_pkg_info.outputs.version }}"
          body: "Automated release triggered by Semantic Release."
          base: ${{ env.TARGET_BRANCH }}
          head: ${{ env.TEMP_BRANCH }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Approve Pull Request
        if: steps.create_pr.outputs.pull-request-url != ''
        run: gh pr review --approve ${{ steps.create_pr.outputs.pull-request-number }}
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Merge Pull Request
        if: steps.create_pr.outputs.pull-request-url != ''
        run: gh pr merge ${{ steps.create_pr.outputs.pull-request-url }} --merge
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
